language: python
dist: xenial
sudo: required
matrix:
  include:
    # base
    - python: 3.6
      env: CXX=g++ BENCHMARK=yes CPPCHECK=yes
    # python versions
    - python: 3.4
      env: CXX=g++
    - python: 3.5
      env: CXX=g++
    - python: 3.7
      env: CXX=g++
    - python: 3.8-dev
      env: CXX=g++
    - python: nightly
      env: CXX=g++
    # compilers
    - python: 3.6
      env: CXX=g++-7
    - python: 3.6
      env: CXX=clang++
    # yajl versions
    - python: 3.6
      env: CXX=g++ YAJL=master
    - python: 3.6
      env: CXX=g++ YAJL=2.0.4
    - python: 3.6
      env: CXX=g++ YAJL=2.0.3
    # extra checks
    - python: 3.6
      env: CXX=g++ ASAN=yes
    - python: 3.6
      env: CXX=g++ TRACEMALLOC=yes COVERAGE=yes
  allow_failures:
    - python: 3.8-dev
      env: CXX=g++
    - python: nightly
      env: CXX=g++
install:
  - sudo apt-add-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get update -qq
  - if [ "$CXX" = "g++-7" ]; then sudo apt-get install g++-7; fi
  - if [ -n "$CPPCHECK" ]; then sudo apt-get install cppcheck; fi
  - |-
    if [ -z "$YAJL" ]; then
        sudo apt-get install libyajl-dev
    else
        sudo apt-get install cmake
        wget -qO- https://github.com/lloyd/yajl/archive/$YAJL.tar.gz | tar -xzf- && (cd yajl-$YAJL && cmake . && make && sudo make install && sudo ldconfig)
    fi
  - |-
    if [ -n "$BENCHMARK" ]; then
        pip install ijson
        pip install tabulate
        pip install cffi
    fi
  - |-
    if [ -n "$COVERAGE" ]; then
        pip install cpp-coveralls
    fi
before_script:
  - |-
    if [ -n "$COVERAGE" ]; then
        export CFLAGS="$CFLAGS -O0 -g --coverage"
        export LDFLAGS="$LDFLAGS --coverage"
    fi
  - export CFLAGS="$CFLAGS -UNDEBUG -Wall -Wextra -Werror"
  - export CC="$CXX"  # pydistutils brokenness
script:
  - |-
    if [ -z "$ASAN" ]; then
        python setup.py build
    else
        env \
            CFLAGS="-O0 -g -fno-omit-frame-pointer -fsanitize=address" \
            LDFLAGS="-fsanitize=address" \
            python setup.py build -g
    fi
  - python setup.py install
  - |-
    if [ -z "$ASAN" ]; then
        python setup.py test
    else
        env \
            LD_PRELOAD=/usr/lib/x86_64-linux-gnu/libasan.so.2 \
            LSAN_OPTIONS=suppressions=$(pwd)/.lsan.suppressions \
            PYTHONPATH=. \
            python setup.py test
    fi
  - |-
    if [ -n "$BENCHMARK" ]; then
        echo "Note that these benchmark results are not reliable, since they are not run in the proper clean environment withoit interference form other processes, and Travis build may have debug flags turned on as well. See README.md for a real benchmark results. "
        python benchmark.py
    fi
after_success:
  - if [ -n "$CPPCHECK" ]; then cppcheck --std=c++11 --quiet --enable=style,performance,portability,missingInclude --error-exitcode=0 src; fi
  - if [ -n "$COVERAGE" ]; then coveralls -i src; fi
